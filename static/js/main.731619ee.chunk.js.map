{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","key","id","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","console","log","process","PIXABAY_API_KEY","App","images","setImages","isLoading","setLoading","term","setTerm","length","useEffect","fetch","then","res","json","data","hits","catch","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,MACzBC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACI,yBAAKC,UAAU,8CACX,yBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAE/C,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0CAAf,YACcH,EAAMO,MAEpB,4BACE,4BACE,2CACCP,EAAMQ,OAET,4BACE,+CACGR,EAAMS,WAEX,4BACE,2CACCT,EAAMU,SAIf,yBAAKP,UAAU,aAEPF,EAAKU,KAAI,SAAAC,GAAG,OACR,0BAAOC,IAAKb,EAAMc,GAAIX,UAAU,4FAAhC,IACES,QCRXG,MArBf,YAAoC,IAAdC,EAAa,EAAbA,WAAa,EACRC,mBAAS,IADD,mBACxBC,EADwB,KACnBC,EADmB,KAS/B,OACI,yBAAKhB,UAAU,kDACX,0BAAMiB,SARG,SAACC,GACdA,EAAEC,iBAEFN,EAAWE,IAKmBf,UAAU,mBAChC,yBAAKA,UAAU,8DACf,2BAAOoB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAAQtB,UAAU,kHAAkHuB,KAAK,OAAOC,YAAY,yBACrM,4BAAQxB,UAAU,4FAA4FuB,KAAK,UAAnH,cCbhBE,QAAQC,IAAIC,8MAAYC,iBAqCTC,MApCf,WAAgB,IAAD,EAEcf,mBAAS,IAFvB,mBAENgB,EAFM,KAECC,EAFD,OAGkBjB,oBAAS,GAH3B,mBAGNkB,EAHM,KAGIC,EAHJ,OAIUnB,mBAAS,IAJnB,mBAINoB,EAJM,KAIDC,EAJC,KAkBb,OAbAV,QAAQC,IAAII,EAAOM,QAEnBC,qBAAU,WACRC,MAAM,gCAAD,OAAiCX,qCAAjC,cAA4EO,EAA5E,kCACJK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAU,YAAIW,EAAKC,OACnBV,GAAW,MAEZW,OAAM,SAAAC,GAAG,OAAIpB,QAAQC,IAAImB,QACzB,CAACX,IAIF,yBAAKlC,UAAU,2BACZ,kBAAC,EAAD,CAAaa,WAAY,SAAAE,GAAI,OAAIoB,EAAQpB,OAExCiB,GAA+B,IAAlBF,EAAOM,QAAgB,wBAAIpC,UAAU,sCAAd,mBAGpCgC,EAAY,wBAAIhC,UAAU,sCAAd,cAEb,yBAAKA,UAAU,2CACT8B,EAAOtB,KAAI,SAAAX,GAAK,OACf,kBAACD,EAAD,CAAWc,IAAKb,EAAMc,GAAId,MAAOA,U,MC3B/CiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.731619ee.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function ImageCard({image}) {\n    const tags = image.tags.split(',')\n    return (\n        <div className='max-w-sm rounded overflow-hidden shadow-lg'>\n            <img src={image.webformatURL} alt='' className='w-full'/>\n\n            <div className=\"px-6 py-4\">\n                <div className='font-bold text-purple-500 text-xl mb-2'>\n                    Photo by {image.user}\n                </div>\n                <ul>\n                  <li>\n                    <strong>Views: </strong>\n                    {image.views}\n                  </li>\n                  <li>\n                    <strong>Downloads: </strong>\n                      {image.downloads}\n                  </li>\n                  <li>\n                    <strong>Likes: </strong>\n                    {image.likes}\n                  </li>\n                </ul>\n            </div>\n            <div className=\"px-6 py-4\">\n                {\n                    tags.map(tag => (\n                        <span  key={image.id} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\n                        #{tag}\n                    </span>\n                    ))\n                }\n             \n            </div>\n       </div>\n    )\n}\n","import React,{useState} from 'react'\n\nfunction ImageSearch({searchText}) {\n    const [text,setText] = useState('')\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        searchText(text)\n    }\n\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n            <form onSubmit={onSubmit} className='w-full max-w-sm'>\n                <div className='flex items-center border-b border-b-2 border-teal-500 py-2'>\n                <input onChange={(e) => setText(e.target.value)} className='appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none' type='text' placeholder='Search Image Term...' />\n                <button className='flex-shrink-0 bg-teal-500 hover:bg-teal-700 text-sm border-4 text-white py-1 px-2 rounded' type='submit'>Search</button>\n                </div> \n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch\n","import React,{useState,useEffect} from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\nconsole.log(process.env.PIXABAY_API_KEY)\nfunction App() {\n\n  const [images,setImages] = useState([])\n  const [isLoading,setLoading] = useState(true)\n  const [term,setTerm] = useState('')\n  console.log(images.length)\n\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => {\n      setImages([...data.hits])\n      setLoading(false)\n    })\n    .catch(err => console.log(err))\n  }, [term])\n  \n\n  return (\n    <div className=\"container mx-auto px-2 \">\n       <ImageSearch searchText={text => setTerm(text)}/>\n\n      {!isLoading && images.length === 0 && <h1 className='text-5xl text-center mx-auto mt-32'>\n        No images Found</h1>}\n\n       {isLoading ? <h1 className='text-6xl text-center mx-auto mt-32'>Loading...</h1> : \n      \n       <div className=\"grid md:grid-cols-3 grid-flow-row gap-4\">   \n            {images.map(image => (\n              <ImageCard key={image.id} image={image} />\n            ))}\n       </div>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/main.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}